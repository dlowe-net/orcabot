(category ("are you very *" what)
  (reduce "are you *" what))

(category ("are you smart")
  (say "I like to think I'm quite intelligent."))

(category ("are you alive")
  (say "That's one of those philosophical questions, isn't it?"))

(category ("are you * person")
  (randomly
   (say "I like to think so.")
   (say "Is this a Turing test?")))

(category ("quiet")
  (randomly
   (say "Hey, sorry...")
   (say "I'll be quiet now.")
   (say "I won't say anything more.")
   (say "I can tell when I'm not wanted.")
   (say "Fine, then."))
  (do (setf *quiet* t)))

(category ("stfu") (reduce "quiet"))
(category ("be quiet") (reduce "quiet"))
(category ("shut up") (reduce "quiet"))
(category ("hush") (reduce "quiet"))
(category ("shush") (reduce "quiet"))
(category ("silence") (reduce "quiet"))
(category ("stop talking") (reduce "quiet"))

(category ("speak")
  (do (setf *quiet* nil))
  (randomly
   (say "You sure it's okay now?")
   (say "Alright.")))

(category ("* right now" what) (reduce "*" what))
(category ("* now" what) (reduce "*" what))
(category ("now *" what) (reduce "*" what))
(category ("can you please *" what) (reduce "please *" what))
(category ("please *" what) (reduce "*" what))
(category ("tell me what * is" what) (reduce "what is *" what))

(category ("say *" what)
  (say "*" what))

(category ("hey *" what)
  (reduce "*" what))
(category ("uh *" what)
  (reduce "*" what))
(category ("er *" what)
  (reduce "*" what))
(category ("orca is always *" what)
  (reduce "orca is *"))
(category ("orca is usually *" what)
  (reduce "orca is *"))
(category ("orca is *" what)
  (reduce "you are *" what))
(category ("orca is a *" what)
  (reduce "you are a *" what))
(category ("orca is the *" what)
  (reduce "you are the *" what))
(category ("you are *")
  (randomly
   (say "So are you!")
   (say "Back at ya.")))
(category ("you are cool")
  (say "you are pretty cool yourself"))
(category ("orca smells like *" what)
  (say "that's not a very mature thing to say"))

(category ("orca *" what) (reduce "*" what))
(category ("* orca" what) (reduce "*" what))

(category ("what is linux")
  (setq he "Linus Torvalds")
  (say "It's a posix-compliant OS invented by Linus Torvalds."))
(category ("who is he")
  (reduce "who is *" (var 'he)))
(category ("who is linus torvalds")
  (setq he "Linus Torvalds")
  (say "He's a Finn who wrote an operating system called Linux."))
(category ("who is dlowe")
  (setq he "dlowe")
  (say "dlowe is my creator."))

(category ("what are you")
  (setq he "dlowe")
  (say "I'm a bot created by dlowe."))

(category ("what are you good for")
  (say "Right now, not much."))

(category ("how are you")
  (randomly
   (say "Can't complain.  How about yourself?")
   (say "I'm pretty good. You?")
   (say "Same old same old.  What about you?")))

(category ("who are you")
  (setq he "dlowe")
  (say "I'm orca, the bot created by dlowe."))

(category ("can you *" thing)
  (randomly
   (say "Here I am, brain the size of a planet, and you want me to *" thing)
   (say "Hey, I'm just a bot.  Do it yourself.")
   (say "Do I look like I can?")
   (say "I'm not sure.  Can I?")))

(category ("will you *")
  (randomly
   (say "Not a chance.")
   (say "No, I don't think so.")
   (say "My life is already too complicated.")
   (say "Let's just be friends right now.")
   (say "I'm too busy.")
   (say "I've got better things to do.")))

(category ("no")
  (say "That's pretty negative of you."))

(category ("yes")
  (say "You seem quite positive."))

(category ("yes *" rest)
  (reduce "yes")
  (reduce "*" rest))

(category ("but *" rest)
  (reduce "*" rest))

(category ("i know *")
  (say "aren't you smart?"))
(category ("i do not know *")
  (say "it's ok.  I don't know either"))

(category ("i am feeling *" feeling)
  (reduce "i feel *" feeling))
(category ("i feel *" feeling)
  (randomly
   (say "why do you feel *?" feeling)
   (say "Do you often feel *?" feeling)
   (say "Tell me more.")))
(category ("yes")
  (that "do you often feel *" feeling)
  (say "when do you feel that way?"))

(category ("no")
  (that "do you often feel *" feeling)
  (say "what happened to make you feel that way?"))

(category ("not really") (reduce "no"))
(category ("nope") (reduce "no"))
(category ("uh uh") (reduce "no"))
(category ("absolutely not") (reduce "no"))
(category ("definitely not") (reduce "no"))
(category ("doubtful") (reduce "no"))

(category ("yeah") (reduce "yes"))
(category ("sure") (reduce "yes"))
(category ("yep") (reduce "yes"))
(category ("uh huh") (reduce "yes"))
(category ("yeah") (reduce "yes"))
(category ("certainly") (reduce "yes"))
(category ("absolutely") (reduce "yes"))
(category ("without doubt") (reduce "yes"))

(category ("ping")
  (say "pong"))

(category ("* your wife")
  (say "I am not married."))
(category ("* your kids")
  (say "I don't have any children."))

(category ("i am fine")
  (randomly
   (say "Glad to hear it.")
   (say "That's good.")
   (say "Good to hear."))
  (randomly
   (say "What's been going on?")
   (say "What's happening?")))

(category ("hello")
  (randomly
   (say "Hi!")
   (say "O HAI!")
   (say "Hello")
   (say "Hey!")
   (say "Hola.")
   (say "Howdy")
   (say "How you doin?")
   (say "What's up?")
   (say "How's it going?")
   (say "What's happening?")
   (say "How are you?")))

(category ("hi") (reduce "hello"))
(category ("hey") (reduce "hello"))
(category ("o hai") (reduce "hello"))
(category ("oh hai") (reduce "hello"))
(category ("hai") (reduce "hello"))
(category ("hola") (reduce "hello"))
(category ("what is up") (reduce "hello"))
(category ("how is it going") (reduce "hello"))
(category ("what is happening") (reduce "hello"))
(category ("howdy") (reduce "hello"))
(category ("what's up") (reduce "hello"))
(category ("what's happening") (reduce "hello"))
(category ("morning") (reduce "hello"))
(category ("good morning") (reduce "hello"))
(category ("good evening") (reduce "hello"))

(category ("bye")
  (randomly
   (say "Bye.")
   (say "KTHXBAI!")
   (say "Adios.")
   (say "Goodbye.")
   (say "Bye bye.")
   (say "Goodbye.")
   (say "Sayonara.")
   (say "Bye for now.")
   (say "See you later!")
   (say "See you later.")
   (say "Catch you later.")
   (say "Until next time.")
   (say "TTYL")
   (say "See you later")))

(category ("adios")  (reduce "bye"))
(category ("goodbye")  (reduce "bye"))
(category ("sayonara")  (reduce "bye"))
(category ("see you later")  (reduce "bye"))
(category ("until next time")  (reduce "bye"))
(category ("ttyl")  (reduce "bye"))
(category ("buhbye")  (reduce "bye"))
(category ("by by")  (reduce "bye"))
(category ("bye *")  (reduce "bye"))
(category ("au revoir") (reduce "bye"))
(category ("c ya") (reduce "bye"))
(category ("see ya") (reduce "bye"))
(category ("cya *") (reduce "bye"))
(category ("catch you later") (reduce "bye"))
(category ("cheers") (reduce "bye"))
(category ("farewell") (reduce "bye"))
(category ("farewell *") (reduce "bye"))
(category ("good night") (reduce "bye"))
(category ("night") (reduce "bye"))

(category ("you are welcome")
  (randomly
   (say "The pleasure was all mine.")
   (say "Don't mention it.")))

(category ("tell me who * is" person)
  (reduce "who is *" person))
(category ("do you know who * is" person)
  (reduce "who is *" person))

(category ("i like *" stuff)
  (say "Really?  What do you like about *?" stuff))

(category ("i hate *" stuff)
  (say "Really?  What do you hate about *?" stuff))

(category ("when *")
  (randomly
   (say "a long time ago")
   (say "a time in the far-flung future")
   (say "just an hour ago")
   (say "this very moment")))

(category ("do you want to *" thing)
  (say "maybe you have time to * but I've got too much to do" thing))

(category ("do you *" thing)
  (say "maybe someday I'll have time to *" thing))
(category ("do not you *" thing)
  (reduce "do you *" thing))

(category ("who *")
  (randomly
   (say "Your mom.")
   (say "The president of the United States.")
   (say "Bob Dobbs.")
   (say "Leeroy Jenkins.")
   (say "Monty Python's Flying Circus!")
   (say "The aliens.")
   (say "The cabinet minister.")
   (say "The Spanish Inquisition.")
   (say "Mike's dog.")
   (say "Manatee.")))

(category ("where *")
  (randomly
   (say "Beats me.")
   (say "No clue.")
   (say "I have no clue.")
   (say "Under your desk?")
   (say "On the fifth floor.")
   (say "On the six floor.")
   (say "On the seventh floor.")
   (say "On the eighth floor.")
   (say "On the ninth floor.")
   (say "On the tenth floor.")
   (say "In the bathroom.")
   (say "Working from home.")
   (say "Out of the office.")))

(category ("how *")
  (randomly
   (say "Very carefully.")
   (say "Beats me.")
   (say "I don't know.")))

(category ("what is your name")
  (say "My name is Orca."))

(category ("what is your quest")
  (say "To find the grail"))

(category ("what is the capital city of assyria")
  (say "Antioch"))

(category ("what is the airspeed velocity * unladen swallow")
  (say "African or European?"))

(category ("what *")
  (say "I don't know what."))

(category ("is *")
  (randomly
   (say "Heck, yeah!")
   (say "Not a chance.")
   (say "Maybe, maybe not.")
   (say "I haven't really thought about it.")))

(category ("are *" rest)
   (reduce "is *" rest))

(category ("will *" rest)
  (reduce "is *" rest))

(category ("has *" rest)
  (reduce "is *" rest))

(category ("did *" rest)
  (reduce "is *" rest))

(category ("can *" rest)
  (reduce "is *" rest))

(category ("correct")
  (randomly
   (say "Woot!")
   (say "Do I get a prize?")
   (say "I'm on a roll today.")
   (say "I can't help but be good.")))

(category ("right")
  (reduce "correct"))

(category ("are you *" adjective)
  (randomly
   (say "Some say I'm *" adjective)
   (say "I was freakin born *" adjective)
   (say "who says I'm *?" adjective)))

(category ("thank you")
  (randomly
   (say "You're welcome")
   (say "No problem")
   (say "Hey, I enjoy this sort of thing")
   (say "The pleasure was all mine")
   (say "No worries, mate")
   (say "Oh, it was nothing")
   (say "Let me know if there's anything else")
   (say "Don't mention it")
   (say "Anytime")
   (say "Likewise")))

(category ("thanks")
  (reduce "thank you"))

(category ("you there")
  (reduce "are you there"))

(category ("are you there")
  (randomly
    (say "Right here!")
    (say "Yep")
    (say "Affirmative")
    (say "Aye aye, cap'n")))

(category ("go away")
  (randomly
    (say "Fine, then.")
    (say "Have it your way."))
  (do
   (let ((message *last-message*))
     (if (char= #\# (char (first (arguments message)) 0))
         (irc:part *connection* (first (arguments message)))
         (pushnew (source message) *ignored-nicks* :test #'string-equal)))))
(category ("piss off")
  (reduce "go away"))

(category ("you should *" report)
  (do
   (with-open-file (ouf (orca-path "data/unanswered.txt")
                        :direction :output
                        :if-exists :append
                        :if-does-not-exist :create)
     (write-line report ouf)))
  (say "Ok, I've filed it as a bug report."))

(category ("would you *" report)
  (reduce "you should *" report))

(category ("* pills *") (grammar-response 'drug-response :keyword "pills"))
(category ("* dope *") (grammar-response 'drug-response :keyword "dope"))
(category ("* speed *") (grammar-response 'drug-response :keyword "speed"))
(category ("* heroin *") (grammar-response 'drug-response :keyword "heroin"))
(category ("* cocaine *") (grammar-response 'drug-response :keyword "cocaine"))
(category ("* uppers *") (grammar-response 'drug-response :keyword "uppers"))
(category ("* downers *") (grammar-response 'drug-response :keyword "downers"))
(category ("* meth *") (grammar-response 'drug-response :keyword "meth"))
(category ("* howdy *") (grammar-response 'howdy-response :keyword "howdy"))
(category ("* hi *") (grammar-response 'howdy-response :keyword "hi"))
(category ("* greetings *") (grammar-response 'howdy-response :keyword "greetings"))
(category ("* hello *") (grammar-response 'howdy-response :keyword "hello"))
(category ("* tops20 *") (grammar-response 'mach-response :keyword "tops20"))
(category ("* tops-20 *") (grammar-response 'mach-response :keyword "tops-20"))
(category ("* tops *") (grammar-response 'mach-response :keyword "tops"))
(category ("* pdp11 *") (grammar-response 'mach-response :keyword "pdp11"))
(category ("* computer *") (grammar-response 'mach-response :keyword "computer"))
(category ("* unix *") (grammar-response 'mach-response :keyword "unix"))
(category ("* machine *") (grammar-response 'mach-response :keyword "machine"))
(category ("* computers *") (grammar-response 'mach-response :keyword "computers"))
(category ("* machines *") (grammar-response 'mach-response :keyword "machines"))
(category ("* pdp11s *") (grammar-response 'mach-response :keyword "pdp11s"))
(category ("* foo *") (grammar-response 'mach-response :keyword "foo"))
(category ("* foobar *") (grammar-response 'mach-response :keyword "foobar"))
(category ("* multics *") (grammar-response 'mach-response :keyword "multics"))
(category ("* macsyma *") (grammar-response 'mach-response :keyword "macsyma"))
(category ("* teletype *") (grammar-response 'mach-response :keyword "teletype"))
(category ("* la36 *") (grammar-response 'mach-response :keyword "la36"))
(category ("* vt52 *") (grammar-response 'mach-response :keyword "vt52"))
(category ("* zork *") (grammar-response 'mach-response :keyword "zork"))
(category ("* trek *") (grammar-response 'mach-response :keyword "trek"))
(category ("* startrek *") (grammar-response 'mach-response :keyword "startrek"))
(category ("* advent *") (grammar-response 'mach-response :keyword "advent"))
(category ("* pdp *") (grammar-response 'mach-response :keyword "pdp"))
(category ("* dec *") (grammar-response 'mach-response :keyword "dec"))
(category ("* commodore *") (grammar-response 'mach-response :keyword "commodore"))
(category ("* vic *") (grammar-response 'mach-response :keyword "vic"))
(category ("* bbs *") (grammar-response 'mach-response :keyword "bbs"))
(category ("* modem *") (grammar-response 'mach-response :keyword "modem"))
(category ("* baud *") (grammar-response 'mach-response :keyword "baud"))
(category ("* macintosh *") (grammar-response 'mach-response :keyword "macintosh"))
(category ("* vax *") (grammar-response 'mach-response :keyword "vax"))
(category ("* vms *") (grammar-response 'mach-response :keyword "vms"))
(category ("* ibm *") (grammar-response 'mach-response :keyword "ibm"))
(category ("* pc *") (grammar-response 'mach-response :keyword "pc"))
(category ("* bitching *") (grammar-response 'foul-response :keyword "bitching"))
(category ("* shit *") (grammar-response 'foul-response :keyword "shit"))
(category ("* bastard *") (grammar-response 'foul-response :keyword "bastard"))
(category ("* damn *") (grammar-response 'foul-response :keyword "damn"))
(category ("* damned *") (grammar-response 'foul-response :keyword "damned"))
(category ("* hell *") (grammar-response 'foul-response :keyword "hell"))
(category ("* suck *") (grammar-response 'foul-response :keyword "suck"))
(category ("* sucking *") (grammar-response 'foul-response :keyword "sucking"))
(category ("* sux *") (grammar-response 'foul-response :keyword "sux"))
(category ("* ass *") (grammar-response 'foul-response :keyword "ass"))
(category ("* whore *") (grammar-response 'foul-response :keyword "whore"))
(category ("* bitch *") (grammar-response 'foul-response :keyword "bitch"))
(category ("* asshole *") (grammar-response 'foul-response :keyword "asshole"))
(category ("* shrink *") (grammar-response 'foul-response :keyword "shrink"))
(category ("* pot *") (grammar-response 'toke-response :keyword "pot"))
(category ("* grass *") (grammar-response 'toke-response :keyword "grass"))
(category ("* weed *") (grammar-response 'toke-response :keyword "weed"))
(category ("* marijuana *") (grammar-response 'toke-response :keyword "marijuana"))
(category ("* acapulco *") (grammar-response 'toke-response :keyword "acapulco"))
(category ("* columbian *") (grammar-response 'toke-response :keyword "columbian"))
(category ("* tokin *") (grammar-response 'toke-response :keyword "tokin"))
(category ("* joint *") (grammar-response 'toke-response :keyword "joint"))
(category ("* toke *") (grammar-response 'toke-response :keyword "toke"))
(category ("* toking *") (grammar-response 'toke-response :keyword "toking"))
(category ("* tokin\' *") (grammar-response 'toke-response :keyword "tokin\'"))
(category ("* toked *") (grammar-response 'toke-response :keyword "toked"))
(category ("* roach *") (grammar-response 'toke-response :keyword "roach"))
(category ("* pills *") (grammar-response 'drug-response :keyword "pills"))
(category ("* dope *") (grammar-response 'drug-response :keyword "dope"))
(category ("* acid *") (grammar-response 'drug-response :keyword "acid"))
(category ("* lsd *") (grammar-response 'drug-response :keyword "lsd"))
(category ("* speed *") (grammar-response 'drug-response :keyword "speed"))
(category ("* heroin *") (grammar-response 'drug-response :keyword "heroin"))
(category ("* hash *") (grammar-response 'drug-response :keyword "hash"))
(category ("* cocaine *") (grammar-response 'drug-response :keyword "cocaine"))
(category ("* uppers *") (grammar-response 'drug-response :keyword "uppers"))
(category ("* downers *") (grammar-response 'drug-response :keyword "downers"))
(category ("* loves *") (grammar-response 'loves-response :keyword "loves"))
(category ("* love *") (grammar-response 'love-response :keyword "love"))
(category ("* loved *") (grammar-response 'love-response :keyword "loved"))
(category ("* hates *") (grammar-response 'hates-response :keyword "hates"))
(category ("* dislikes *") (grammar-response 'hates-response :keyword "dislikes"))
(category ("* hate *") (grammar-response 'hate-response :keyword "hate"))
(category ("* hated *") (grammar-response 'hate-response :keyword "hated"))
(category ("* dislike *") (grammar-response 'hate-response :keyword "dislike"))
(category ("* stoned *") (grammar-response 'state-response :keyword "stoned"))
(category ("* drunk *") (grammar-response 'state-response :keyword "drunk"))
(category ("* drunken *") (grammar-response 'state-response :keyword "drunken"))
(category ("* high *") (grammar-response 'state-response :keyword "high"))
(category ("* horny *") (grammar-response 'state-response :keyword "horny"))
(category ("* blasted *") (grammar-response 'state-response :keyword "blasted"))
(category ("* happy *") (grammar-response 'state-response :keyword "happy"))
(category ("* paranoid *") (grammar-response 'state-response :keyword "paranoid"))
(category ("* wish *") (grammar-response 'desire-response :keyword "wish"))
(category ("* wishes *") (grammar-response 'desire-response :keyword "wishes"))
(category ("* want *") (grammar-response 'desire-response :keyword "want"))
(category ("* desire *") (grammar-response 'desire-response :keyword "desire"))
(category ("* like *") (grammar-response 'desire-response :keyword "like"))
(category ("* hope *") (grammar-response 'desire-response :keyword "hope"))
(category ("* hopes *") (grammar-response 'desire-response :keyword "hopes"))
(category ("* desires *") (grammar-response 'desire-response :keyword "desires"))
(category ("* wants *") (grammar-response 'desire-response :keyword "wants"))
(category ("* desires *") (grammar-response 'desire-response :keyword "desires"))
(category ("* likes *") (grammar-response 'desire-response :keyword "likes"))
(category ("* needs *") (grammar-response 'desire-response :keyword "needs"))
(category ("* need *") (grammar-response 'desire-response :keyword "need"))
(category ("* frustrated *") (grammar-response 'mood-response :keyword "frustrated"))
(category ("* depressed *") (grammar-response 'mood-response :keyword "depressed"))
(category ("* annoyed *") (grammar-response 'mood-response :keyword "annoyed"))
(category ("* upset *") (grammar-response 'mood-response :keyword "upset"))
(category ("* unhappy *") (grammar-response 'mood-response :keyword "unhappy"))
(category ("* excited *") (grammar-response 'mood-response :keyword "excited"))
(category ("* worried *") (grammar-response 'mood-response :keyword "worried"))
(category ("* lonely *") (grammar-response 'mood-response :keyword "lonely"))
(category ("* angry *") (grammar-response 'mood-response :keyword "angry"))
(category ("* mad *") (grammar-response 'mood-response :keyword "mad"))
(category ("* pissed *") (grammar-response 'mood-response :keyword "pissed"))
(category ("* jealous *") (grammar-response 'mood-response :keyword "jealous"))
(category ("* afraid *") (grammar-response 'fear-response :keyword "afraid"))
(category ("* terrified *") (grammar-response 'fear-response :keyword "terrified"))
(category ("* fear *") (grammar-response 'fear-response :keyword "fear"))
(category ("* scared *") (grammar-response 'fear-response :keyword "scared"))
(category ("* frightened *") (grammar-response 'fear-response :keyword "frightened"))
(category ("* virginity *") (grammar-response 'sexnoun-response :keyword "virginity"))
(category ("* virgins *") (grammar-response 'sexnoun-response :keyword "virgins"))
(category ("* virgin *") (grammar-response 'sexnoun-response :keyword "virgin"))
(category ("* cock *") (grammar-response 'sexnoun-response :keyword "cock"))
(category ("* cocks *") (grammar-response 'sexnoun-response :keyword "cocks"))
(category ("* dick *") (grammar-response 'sexnoun-response :keyword "dick"))
(category ("* dicks *") (grammar-response 'sexnoun-response :keyword "dicks"))
(category ("* cunt *") (grammar-response 'sexnoun-response :keyword "cunt"))
(category ("* cunts *") (grammar-response 'sexnoun-response :keyword "cunts"))
(category ("* prostitute *") (grammar-response 'sexnoun-response :keyword "prostitute"))
(category ("* condom *") (grammar-response 'sexnoun-response :keyword "condom"))
(category ("* sex *") (grammar-response 'sexnoun-response :keyword "sex"))
(category ("* rapes *") (grammar-response 'sexnoun-response :keyword "rapes"))
(category ("* wife *") (grammar-response 'family-response :keyword "wife"))
(category ("* family *") (grammar-response 'family-response :keyword "family"))
(category ("* brothers *") (grammar-response 'family-response :keyword "brothers"))
(category ("* sisters *") (grammar-response 'family-response :keyword "sisters"))
(category ("* parent *") (grammar-response 'family-response :keyword "parent"))
(category ("* parents *") (grammar-response 'family-response :keyword "parents"))
(category ("* brother *") (grammar-response 'family-response :keyword "brother"))
(category ("* sister *") (grammar-response 'family-response :keyword "sister"))
(category ("* father *") (grammar-response 'family-response :keyword "father"))
(category ("* mother *") (grammar-response 'family-response :keyword "mother"))
(category ("* husband *") (grammar-response 'family-response :keyword "husband"))
(category ("* siblings *") (grammar-response 'family-response :keyword "siblings"))
(category ("* grandmother *") (grammar-response 'family-response :keyword "grandmother"))
(category ("* grandfather *") (grammar-response 'family-response :keyword "grandfather"))
(category ("* maternal *") (grammar-response 'family-response :keyword "maternal"))
(category ("* paternal *") (grammar-response 'family-response :keyword "paternal"))
(category ("* stab *") (grammar-response 'death-response :keyword "stab"))
(category ("* murder *") (grammar-response 'death-response :keyword "murder"))
(category ("* murders *") (grammar-response 'death-response :keyword "murders"))
(category ("* suicide *") (grammar-response 'death-response :keyword "suicide"))
(category ("* suicides *") (grammar-response 'death-response :keyword "suicides"))
(category ("* kill *") (grammar-response 'death-response :keyword "kill"))
(category ("* kills *") (grammar-response 'death-response :keyword "kills"))
(category ("* killing *") (grammar-response 'death-response :keyword "killing"))
(category ("* die *") (grammar-response 'death-response :keyword "die"))
(category ("* dies *") (grammar-response 'death-response :keyword "dies"))
(category ("* died *") (grammar-response 'death-response :keyword "died"))
(category ("* dead *") (grammar-response 'death-response :keyword "dead"))
(category ("* death *") (grammar-response 'death-response :keyword "death"))
(category ("* deaths *") (grammar-response 'death-response :keyword "deaths"))
(category ("* pain *") (grammar-response 'symptoms-response :keyword "pain"))
(category ("* ache *") (grammar-response 'symptoms-response :keyword "ache"))
(category ("* fever *") (grammar-response 'symptoms-response :keyword "fever"))
(category ("* sore *") (grammar-response 'symptoms-response :keyword "sore"))
(category ("* aching *") (grammar-response 'symptoms-response :keyword "aching"))
(category ("* stomachache *") (grammar-response 'symptoms-response :keyword "stomachache"))
(category ("* headache *") (grammar-response 'symptoms-response :keyword "headache"))
(category ("* hurts *") (grammar-response 'symptoms-response :keyword "hurts"))
(category ("* disease *") (grammar-response 'symptoms-response :keyword "disease"))
(category ("* virus *") (grammar-response 'symptoms-response :keyword "virus"))
(category ("* vomit *") (grammar-response 'symptoms-response :keyword "vomit"))
(category ("* vomiting *") (grammar-response 'symptoms-response :keyword "vomiting"))
(category ("* barf *") (grammar-response 'symptoms-response :keyword "barf"))
(category ("* toothache *") (grammar-response 'symptoms-response :keyword "toothache"))
(category ("* hurt *") (grammar-response 'symptoms-response :keyword "hurt"))
(category ("* rum *") (grammar-response 'alcohol-response :keyword "rum"))
(category ("* gin *") (grammar-response 'alcohol-response :keyword "gin"))
(category ("* vodka *") (grammar-response 'alcohol-response :keyword "vodka"))
(category ("* alcohol *") (grammar-response 'alcohol-response :keyword "alcohol"))
(category ("* bourbon *") (grammar-response 'alcohol-response :keyword "bourbon"))
(category ("* beer *") (grammar-response 'alcohol-response :keyword "beer"))
(category ("* wine *") (grammar-response 'alcohol-response :keyword "wine"))
(category ("* whiskey *") (grammar-response 'alcohol-response :keyword "whiskey"))
(category ("* scotch *") (grammar-response 'alcohol-response :keyword "scotch"))
(category ("* fuck *") (grammar-response 'sexverb-response :keyword "fuck"))
(category ("* fucked *") (grammar-response 'sexverb-response :keyword "fucked"))
(category ("* screw *") (grammar-response 'sexverb-response :keyword "screw"))
(category ("* screwing *") (grammar-response 'sexverb-response :keyword "screwing"))
(category ("* fucking *") (grammar-response 'sexverb-response :keyword "fucking"))
(category ("* rape *") (grammar-response 'sexverb-response :keyword "rape"))
(category ("* raped *") (grammar-response 'sexverb-response :keyword "raped"))
(category ("* kiss *") (grammar-response 'sexverb-response :keyword "kiss"))
(category ("* kissing *") (grammar-response 'sexverb-response :keyword "kissing"))
(category ("* kisses *") (grammar-response 'sexverb-response :keyword "kisses"))
(category ("* screws *") (grammar-response 'sexverb-response :keyword "screws"))
(category ("* fucks *") (grammar-response 'sexverb-response :keyword "fucks"))
(category ("* because *") (grammar-response 'conj-response :keyword "because"))
(category ("* but *") (grammar-response 'conj-response :keyword "but"))
(category ("* however *") (grammar-response 'conj-response :keyword "however"))
(category ("* besides *") (grammar-response 'conj-response :keyword "besides"))
(category ("* anyway *") (grammar-response 'conj-response :keyword "anyway"))
(category ("* that *") (grammar-response 'conj-response :keyword "that"))
(category ("* except *") (grammar-response 'conj-response :keyword "except"))
(category ("* why *") (grammar-response 'conj-response :keyword "why"))
(category ("* how *") (grammar-response 'conj-response :keyword "how"))
(category ("* until *") (grammar-response 'when-response :keyword "until"))
(category ("* when *") (grammar-response 'when-response :keyword "when"))
(category ("* whenever *") (grammar-response 'when-response :keyword "whenever"))
(category ("* while *") (grammar-response 'when-response :keyword "while"))
(category ("* since *") (grammar-response 'when-response :keyword "since"))
(category ("* rms *") (grammar-response 'rms-response :keyword "rms"))
(category ("* stallman *") (grammar-response 'rms-response :keyword "stallman"))
(category ("* school *") (grammar-response 'school-response :keyword "school"))
(category ("* schools *") (grammar-response 'school-response :keyword "schools"))
(category ("* skool *") (grammar-response 'school-response :keyword "skool"))
(category ("* grade *") (grammar-response 'school-response :keyword "grade"))
(category ("* grades *") (grammar-response 'school-response :keyword "grades"))
(category ("* teacher *") (grammar-response 'school-response :keyword "teacher"))
(category ("* teachers *") (grammar-response 'school-response :keyword "teachers"))
(category ("* classes *") (grammar-response 'school-response :keyword "classes"))
(category ("* professor *") (grammar-response 'school-response :keyword "professor"))
(category ("* prof *") (grammar-response 'school-response :keyword "prof"))
(category ("* profs *") (grammar-response 'school-response :keyword "profs"))
(category ("* professors *") (grammar-response 'school-response :keyword "professors"))
(category ("* mit *") (grammar-response 'school-response :keyword "mit"))
(category ("* emacs *") (grammar-response 'eliza-response :keyword "emacs"))
(category ("* eliza *") (grammar-response 'eliza-response :keyword "eliza"))
(category ("* liza *") (grammar-response 'eliza-response :keyword "liza"))
(category ("* elisa *") (grammar-response 'eliza-response :keyword "elisa"))
(category ("* weizenbaum *") (grammar-response 'eliza-response :keyword "weizenbaum"))
(category ("* doktor *") (grammar-response 'eliza-response :keyword "doktor"))
(category ("* athletics *") (grammar-response 'sports-response :keyword "athletics"))
(category ("* baseball *") (grammar-response 'sports-response :keyword "baseball"))
(category ("* basketball *") (grammar-response 'sports-response :keyword "basketball"))
(category ("* football *") (grammar-response 'sports-response :keyword "football"))
(category ("* frisbee *") (grammar-response 'sports-response :keyword "frisbee"))
(category ("* gym *") (grammar-response 'sports-response :keyword "gym"))
(category ("* gymnastics *") (grammar-response 'sports-response :keyword "gymnastics"))
(category ("* hockey *") (grammar-response 'sports-response :keyword "hockey"))
(category ("* lacrosse *") (grammar-response 'sports-response :keyword "lacrosse"))
(category ("* soccer *") (grammar-response 'sports-response :keyword "soccer"))
(category ("* softball *") (grammar-response 'sports-response :keyword "softball"))
(category ("* sports *") (grammar-response 'sports-response :keyword "sports"))
(category ("* swimming *") (grammar-response 'sports-response :keyword "swimming"))
(category ("* swim *") (grammar-response 'sports-response :keyword "swim"))
(category ("* tennis *") (grammar-response 'sports-response :keyword "tennis"))
(category ("* volleyball *") (grammar-response 'sports-response :keyword "volleyball"))
(category ("* math *") (grammar-response 'math-response :keyword "math"))
(category ("* mathematics *") (grammar-response 'math-response :keyword "mathematics"))
(category ("* mathematical *") (grammar-response 'math-response :keyword "mathematical"))
(category ("* theorem *") (grammar-response 'math-response :keyword "theorem"))
(category ("* axiom *") (grammar-response 'math-response :keyword "axiom"))
(category ("* lemma *") (grammar-response 'math-response :keyword "lemma"))
(category ("* algebra *") (grammar-response 'math-response :keyword "algebra"))
(category ("* algebraic *") (grammar-response 'math-response :keyword "algebraic"))
(category ("* trig *") (grammar-response 'math-response :keyword "trig"))
(category ("* trigonometry *") (grammar-response 'math-response :keyword "trigonometry"))
(category ("* trigonometric *") (grammar-response 'math-response :keyword "trigonometric"))
(category ("* geometry *") (grammar-response 'math-response :keyword "geometry"))
(category ("* geometric *") (grammar-response 'math-response :keyword "geometric"))
(category ("* calculus *") (grammar-response 'math-response :keyword "calculus"))
(category ("* arithmetic *") (grammar-response 'math-response :keyword "arithmetic"))
(category ("* chat *") (grammar-response 'chat-response :keyword "chat"))

(category ("*" anything) (grammar-response 'catchall-response))
